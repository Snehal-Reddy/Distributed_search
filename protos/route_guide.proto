syntax = "proto3";

service QueryNode {
	rpc AskQuery(Query) returns (stream Result) {}
	rpc AddDocuments(Document) returns (Status) {} 
	rpc DeleteDocument( DocumentId) returns (Status) {}
	rpc FetchDocuments(DocumentId) returns (Document) {}
}

service DataNode {
	
	rpc AskQuery(Query)	returns (stream Result) {}
	rpc WriteRequest(Document) returns (Status) {}
	rpc WriteReply(Status) returns (Status) {}
	rpc DeleteRequest(DocumentId) returns (Status) {}
	rpc DeleteReply(Status) returns (Status) {}
	rpc FetchDocuments(DocumentId) returns (Document) {}
}

message Query
{
	string query=1;
}

message Result
{
	int32 docid=1;
	string title=2;
	double score=3; 
}

message Status
{
	string content=1;
}

message Document
{
	int32 docid = 1;
	string title=2;
	string content=3;
}

message DocumentId
{
	int32 docid = 1;
}

message Acknowledgement {
	int32 status = 7;
}

message IsMaster {
	// message sent by the backup to crawler to inform of the change in master
	string ip = 1; // left optional, not passing anyways in the application
}

message HealthCheckRequest {
	string healthCheck = 1;
}

message HealthCheckResponse {
	string status = 1;
	string data = 2;
}

service HealthCheck {
 	rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

service LeaderNotice {
	// rpc by masterbackup to crawler to inform change in master
 	rpc MasterChange(IsMaster) returns (Acknowledgement);
}